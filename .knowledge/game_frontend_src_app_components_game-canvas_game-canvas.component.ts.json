{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular component `GameCanvasComponent` responsible for rendering and controlling the game canvas, including lifecycle management, animation loop, user input handling, and interactions with game and audio services.", "external_files": ["../../services/game.service", "../../services/audio.service"], "external_methods": ["GameService.attachCanvas", "GameService.updateCanvasSize", "GameService.update", "GameService.render", "GameService.init", "GameService.onKeyDown", "GameService.onKeyUp", "GameService.onTouchStart", "GameService.onTouchMove", "GameService.onTouchEnd", "GameAudioService.stopMusic", "GameAudioService.playMusic", "GameAudioService.playLevelComplete"], "published": ["gameOver", "levelComplete"], "classes": [{"name": "GameCanvasComponent", "description": "An Angular component responsible for rendering the game canvas, handling animation loop, user inputs, and coordinating with game and audio services."}], "methods": [{"name": "ngAfterViewInit", "description": "Lifecycle hook that initializes the canvas context, attaches the canvas to the game service, and starts the render loop."}, {"name": "ngOnDestroy", "description": "Lifecycle hook that sets a flag and cancels the animation frame to cleanup when the component is destroyed."}, {"name": "cancelAnimLoop", "description": "Cleans up the current animation frame request if active."}, {"name": "startLoop", "description": "Starts the game/render loop by requesting an animation frame."}, {"name": "onResize", "description": "Handles window resize events to adjust canvas size."}, {"name": "resizeCanvas", "description": "Requests the game service to update canvas size, with a deferred additional call via timeout."}, {"name": "loop", "description": "Main game loop handling rendering, game state checks, and scheduling the next frame."}, {"name": "startGame", "description": "Initializes a new game session, stops current music, starts game music and the render loop."}, {"name": "restartGame", "description": "Restarts the game by invoking `startGame`, ensuring clean state."}, {"name": "onKeyDown", "description": "Handles keyboard keydown events, passes them to game service if input not disabled."}, {"name": "onKeyUp", "description": "Handles keyboard keyup events, passes them to game service if input not disabled."}, {"name": "onTouchStart", "description": "Handles touch start events, passes them to game service if input not disabled."}, {"name": "onTouchMove", "description": "Handles touch move events, passes them to game service if input not disabled."}, {"name": "onTouchEnd", "description": "Handles touch end events, passes them to game service if input not disabled."}], "calls": ["globalThis.cancelAnimationFrame", "globalThis.requestAnimationFrame", "globalThis.setTimeout", "this.gameSvc.attachCanvas", "this.gameSvc.updateCanvasSize", "this.gameSvc.update", "this.gameSvc.render", "this.gameSvc.init", "this.gameSvc.onKeyDown", "this.gameSvc.onKeyUp", "this.gameSvc.onTouchStart", "this.gameSvc.onTouchMove", "this.gameSvc.onTouchEnd", "this.audioSvc.stopMusic", "this.audioSvc.playMusic", "this.audioSvc.playLevelComplete"], "search-terms": ["Angular", "game canvas component", "animation loop", "canvas resizing", "Input handling", "Game service interaction", "Audio service interaction", "Lifecycle hooks", "requestAnimationFrame"], "state": 2, "file_id": 24, "knowledge_revision": 106, "git_revision": "7c935a13c6e2405f1dd9e0c4f2ff2c97e4854575", "revision_history": [{"51": ""}, {"75": ""}, {"77": ""}, {"82": ""}, {"85": ""}, {"90": ""}, {"93": "b51a96b23d9d83039bc60a6669c5dd74ee4095db"}, {"95": "b51a96b23d9d83039bc60a6669c5dd74ee4095db"}, {"97": "4b1ac76b5b0201c752819ddb92291db8cde9d113"}, {"99": "4b1ac76b5b0201c752819ddb92291db8cde9d113"}, {"104": "d66972d9c1704616fdbcf54f6e4825acd0df0a6d"}, {"105": "d66972d9c1704616fdbcf54f6e4825acd0df0a6d"}, {"106": "7c935a13c6e2405f1dd9e0c4f2ff2c97e4854575"}], "ctags": [{"_type": "tag", "name": "GameCanvasComponent", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/components/game-canvas/game-canvas.component.ts", "pattern": "/^export class GameCanvasComponent implements AfterViewInit {$/", "language": "TypeScript", "kind": "class"}], "hash": "2c218c15c688a9aaf35f912f8f8b235f", "format-version": 4, "code-base-name": "game_frontend", "filename": "game_frontend/src/app/components/game-canvas/game-canvas.component.ts"}