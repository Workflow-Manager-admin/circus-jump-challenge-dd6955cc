{"is_source_file": true, "format": "TypeScript", "description": "This file contains an Angular service class 'GameAudioService' responsible for managing game audio functionalities such as playing music, sound effects, toggling mute, and stopping music within a game frontend project.", "external_files": ["globalThis", "HTMLAudioElement", "AudioContext", "AudioBuffer", "Blob", "URL"], "external_methods": ["audioBuffer.getChannelData", "URL.createObjectURL"], "published": ["GameAudioService"], "classes": [{"name": "GameAudioService", "description": "Angular service providing audio control methods for the game, including playing music, sound effects, and toggling mute."}], "methods": [{"name": "isMusicOn", "description": "Returns whether the music is enabled."}, {"name": "toggleMute", "description": "Toggles music/audio on or off."}, {"name": "stopMusic", "description": "Stops the currently playing music track if any."}, {"name": "playMusic", "description": "Plays background music, creating a waveform and looping it."}, {"name": "playJump", "description": "Plays the jump sound effect."}, {"name": "playScore", "description": "Plays the coin collection sound effect."}, {"name": "playMenuSelect", "description": "Plays the menu selection sound effect."}, {"name": "playMenuBack", "description": "Plays the menu back navigation sound effect."}, {"name": "playDeath", "description": "Plays the death sound effect."}, {"name": "playLevelComplete", "description": "Plays the level completion sound effect."}, {"name": "bufferToWav", "description": "Converts an AudioBuffer to a WAV Blob for playback."}, {"name": "function writeString(view:any, offset:number, str:string) { writeString", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["this.bufferToWav", "this.stopMusic", "this.playBeep", "ctx.createBuffer", "ctx.createOscillator", "ctx.createGain", "osc.start", "osc.stop", "ctx.close", "URL.createObjectURL"], "search-terms": ["Angular Audio Service", "Music toggle", "Sound effects", "Waveform synthesis", "AudioContext", "playSound", "game frontend audio"], "state": 2, "file_id": 29, "knowledge_revision": 88, "git_revision": "", "revision_history": [{"61": ""}, {"74": ""}, {"88": ""}], "ctags": [{"_type": "tag", "name": "GameAudioService", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^export class GameAudioService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "audioBuffer", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let audioBuffer = ctx.createBuffer(1, ctx.sampleRate*8, ctx.sampleRate);$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "blob", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let blob = this.bufferToWav(audioBuffer);$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "ctx", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let ctx = new ((globalThis as any).AudioContext || (globalThis as any).webkitAudioContext)()/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let data = audioBuffer.getChannelData(0);$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "enabled", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^  private enabled: boolean = true;$/", "language": "TypeScript", "kind": "property", "scope": "GameAudioService", "scopeKind": "class"}, {"_type": "tag", "name": "gain", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let gain = ctx.createGain();$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^      for(let i=0;i<length;++i) {$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    for(let i=0;i<buffer.length;++i) {$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let idx = 0;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "len", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let len = buffer.length * buffer.numberOfChannels * 2 + 44;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "length", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^      const length = Math.floor(ctx.sampleRate*dur);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "melody", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    const melody = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "offset", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let offset = 0;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "osc", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let osc = ctx.createOscillator();$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "s", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^      let s = Math.max(-1, Math.min(1, buffer.getChannelData(0)[i]));$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let url = URL.createObjectURL(blob);$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "view", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    let view = new DataView(new ArrayBuffer(len));$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "writeString", "path": "/home/kavia/workspace/code-generation/circus-jump-challenge-dd6955cc/game_frontend/src/app/services/audio.service.ts", "pattern": "/^    function writeString(view:any, offset:number, str:string) {$/", "language": "TypeScript", "kind": "function"}], "hash": "7638ee625bea33612abe975395007c1e", "format-version": 4, "code-base-name": "game_frontend", "filename": "game_frontend/src/app/services/audio.service.ts", "fields": [{"name": "let audioBuffer = ctx.createBuffer(1, ctx.sampleRate*8, ctx.sampleRate);", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let blob = this.bufferToWav(audioBuffer);", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let ctx = new ((globalThis as any).AudioContext || (globalThis as any).webkitAudioContext)()/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let data = audioBuffer.getChannelData(0);", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private enabled: boolean = true;", "scope": "GameAudioService", "scopeKind": "class", "description": "unavailable"}, {"name": "let gain = ctx.createGain();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "for(let i=0;i<length;++i) {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "for(let i=0;i<buffer.length;++i) {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let idx = 0;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let len = buffer.length * buffer.numberOfChannels * 2 + 44;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let offset = 0;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let osc = ctx.createOscillator();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let s = Math.max(-1, Math.min(1, buffer.getChannelData(0)[i]));", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let url = URL.createObjectURL(blob);", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let view = new DataView(new ArrayBuffer(len));", "scope": "", "scopeKind": "", "description": "unavailable"}]}